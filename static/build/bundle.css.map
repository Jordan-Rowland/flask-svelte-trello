{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../src/App.svelte",
    "../../src/Users/Login.svelte",
    "../../src/Board/Board.svelte",
    "../../src/Board/List.svelte",
    "../../src/UI/Error.svelte",
    "../../src/Board/Note.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from \"svelte\";\n  import Login from \"./Users/Login.svelte\";\n  import Board from \"./Board/Board.svelte\";\n\n\n  let loggedIn;\n\n\n  onMount(async () => {\n    const res = await fetch(\n      \"/checkLogin\");\n    const response = await res.json();\n    if (response.logged_in) {\n      loggedIn = true;\n    } else {\n      loggedIn = false;\n    }\n  });\n\n\n  async function logoutUser() {\n    loggedIn = false;\n    const res = await fetch(`/logout`);\n    const response = await res.json();\n  }\n\n</script>\n\n{#if loggedIn == false}\n  <Login\n    on:login-user={(event) => loggedIn = event.detail.success} />\n{:else if loggedIn}\n  <Board on:logout-user={logoutUser} />\n{:else}\n <div></div>\n{/if}\n\n\n<style>\n\n:global(body) {\n  margin: 0;\n  background-color: hsl(170, 45%, 95%);\n}\n\n:global(*) {\n  /*font-family: 'Lato', sans-serif;*/\n  /*font-family: 'Mansalva', cursive;*/\n}\n\nbutton:hover {\n  cursor: pointer;\n}\n\n</style>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  import Error from \"../UI/Error.svelte\";\n\n  let errorMessage;\n  let errorShow;\n\n\n  let email;\n  let password;\n  let confirmPassword;\n  let login = true;\n\n\n  async function loginUser() {\n    const res = await fetch(\n      \"/login\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({email: email, password: password}),\n      }\n    );\n    const response = await res.json();\n    if (!response.success) {\n      errorMessage = \"Login failed\";\n      errorShow = true;\n      return false;\n    }\n    dispatch(\"login-user\", response);\n  }\n\n\n  async function signUpUser() {\n    if (password !== confirmPassword) {\n      // console.log(\"Passwords dont match\");\n      errorMessage = \"Passwords do not match\";\n      errorShow = true;\n      return false;\n    }\n    const res = await fetch(\n      \"/signup\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({email: email, password: password}),\n      }\n    );\n    const response = await res.json();\n    if (!response.success) {\n      // console.log(\"Login or signup failed\");\n      errorMessage = response.message;\n      errorShow = true;\n      return false;\n    }\n    errorShow = false;\n    dispatch(\"login-user\", response);\n  }\n\n</script>\n\n<div id=\"card\">\n<div class=\"header\">\n{#if login}\n  <h1>Login</h1>\n{:else}\n  <h1>Sign Up</h1>\n{/if}\n  </div>\n<hr>\n<div class=\"form\">\n<form>\n<label>\nEmail<br>\n<input type=\"email\" name=\"email\" bind:value={email}>\n</label>\n\n<label>\nPassword<br>\n<input type=\"password\" name=\"password\" bind:value={password}>\n</label>\n\n{#if !login}\n<label>\nConfirm Password<br>\n<input type=\"password\" name=\"cPassword\" bind:value={confirmPassword}>\n</label>\n\n<button type=\"submit\"\n  on:click|preventDefault={signUpUser}>\n  Sign Up\n</button>\n{:else}\n<button type=\"submit\"\n  on:click|preventDefault={loginUser}>\n  Login\n</button>\n{/if}\n\n<label>\nLogin\n<input type=\"checkbox\" name=\"login\" bind:checked={login}>\n</label>\n\n</form>\n</div>\n</div>\n\n<Error show={errorShow} message={errorMessage}\n  on:close-error={() => errorShow = false} />\n\n\n<style>\n\n#card {\n  background-color: hsla(258, 100%, 99%, 1);\n  position: relative;\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n  transition: 0.3s;\n  padding: 12px;\n  min-width: 25%;\n  max-width: 30%;\n  min-height: 20rem;\n  margin: 5rem auto;\n  border-radius: 3px;\n}\n\n.form {\n  margin-top: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nlabel {\n  margin-bottom: 0.45rem;\n}\n\n</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  import List from \"./List.svelte\";\n\n\n  onMount(() => {\n    getLists();\n  });\n\n  let lists = [];\n  let listName;\n\n\n  async function getLists() {\n    const res = await fetch(\n      \"/lists\");\n    const response = await res.json();\n    lists = response.lists;\n  }\n\n\n  async function addList() {\n    const res = await fetch(\n      \"/addList\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({name: listName}),\n      }\n    );\n    lists = [...lists, await res.json()];\n    listName = \"\";\n  }\n\n\n  async function deleteList(event) {\n    const selectedId = event.detail;\n    const res = await fetch(\n      `/deleteList/${selectedId}`, {method: \"DELETE\"}\n    );\n    let updatedLists = lists.filter(\n      list => list.id !== selectedId\n    );\n    lists = updatedLists;\n  }\n\n\n  async function logoutUser() {\n    dispatch(\"logout-user\");\n    const res = await fetch(`/logout`);\n    const response = await res.json();\n  }\n\n</script>\n\n  <div class=\"new-list\">\n    <input type=\"text\" name=\"newList\" bind:value={listName} placeholder=\"New List Name\">\n    <button\n      on:click={addList}>Add List</button>\n    <div class=\"logout-button\">\n      <button\n        on:click={logoutUser}>Log Out</button>\n    </div>\n  </div>\n\n  <div class=\"column\">\n  {#if lists}\n    {#each lists as list, index (list.id)}\n      <List name={list.name} id={list.id}\n        on:delete-list={deleteList} />\n    {/each}\n  {/if}\n  </div>\n\n<style>\n\n:global(body) {\n  margin: 0;\n  background-color: hsl(170, 45%, 95%);\n}\n\n:global(*) {\n  /*font-family: 'Lato', sans-serif;*/\n  /*font-family: 'Mansalva', cursive;*/\n}\n\n.column {\n  display: flex;\n  justify-content: flex-start;\n  margin-top: 50px;\n}\n\n.new-list {\n  position: fixed;\n  width: 99%;\n  display: flex;\n  background-color: hsla(228, 100%, 61%, 1);\n  border-radius: 3px;\n  justify-content: center;\n  align-content: center;\n}\n\n.new-list > input, button {\n  margin: 9px;\n  border-radius: 3px;\n  margin-left: 0.35rem;\n}\n\nbutton:hover {\n  cursor: pointer;\n}\n\n.logout-button {\n  position: absolute;\n  right: 0.35rem;\n}\n\n</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { createEventDispatcher } from \"svelte\";\n  import { slide } from 'svelte/transition';\n  import { quintOut } from 'svelte/easing';\n  let dispatch = createEventDispatcher();\n\n  import Note from \"./Note.svelte\";\n\n  export let id;\n  export let name;\n\n  let notes = [];\n  let newNote;\n\n  onMount(() => {\n    getNotes();\n  });\n\n\n  async function getNotes() {\n    const res = await fetch(\n      `/list/${id}/notes`);\n    const resJson = await res.json();\n    notes = resJson.notes;\n  }\n\n\n  async function addNote() {\n    const res = await fetch(\n      \"/addNote\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({body: newNote, list_id: id}),\n      }\n    );\n    console.log(notes);\n    notes = [await res.json(), ...notes];\n    newNote = \"\";\n  }\n\n\n  async function deleteNote(event) {\n    const selectedId = event.detail;\n    const res = await fetch(\n      `/deleteNote/${selectedId}`, {method: \"DELETE\"}\n    );\n    let updatedNotes = notes.filter(\n      note => note.id !== selectedId\n    );\n    notes = updatedNotes;\n  }\n\n\n  function deleteList() {\n    dispatch(\"delete-list\", id);\n  }\n\n</script>\n\n<section\n  transition:slide=\"{{delay: 50, duration: 185, easing: quintOut }}\">\n<div class=\"list\">\n<div>\n  <div class=\"name\">\n    <span class=\"list-name\">\n      {name}\n    </span>\n    <span class=\"delete-list\"\n      on:click={deleteList}>X</span>\n  </div>\n</div>\n<div class=\"new-note\">\n  <input type=\"text\" name=\"new-note\" bind:value={newNote}>\n  <button on:click={addNote}>Add Note</button>\n</div>\n{#if notes}\n  {#each notes as note (note.id)}\n    <Note noteBody={note.body} id={note.id}\n      on:delete-note={deleteNote}/>\n  {/each}\n{/if}\n</div>\n</section>\n\n<style>\n\n.name {\n  background-color: hsla(230, 80%, 30%, 1);\n  border-radius: 5px;\n  display: flex;\n  justify-content: space-between;\n  padding: 5px;\n  margin: 5px;\n  color: hsla(258, 100%, 99%, 1);\n  font-weight: 800;\n}\n\n.delete-list {\n  background-color: hsla(228, 100%, 61%, 1);\n  /*background-color: hsla(228, 100%, 21%, 1);*/\n  padding: 0.15rem 0.35rem;\n  border-radius: 3px;\n}\n\n.delete-list:hover {\n  cursor: pointer;\n}\n\n.list {\n  background-color: hsla(228, 100%, 61%, 1);\n  margin: 20px;\n  display: flex;\n  flex-direction: column;\n  min-width: 21vw;\n  max-width: 35vw;\n  border-radius: 3px;\n}\n\n.list-name {\n  margin-left: 5px;\n}\n\n.new-note {\n  margin: 10px auto;\n  display: flex;\n  justify-content: space-around;\n}\n\nbutton {\n  border-radius: 3px;\n  margin-left: 0.35rem;\n  }\n\nbutton:hover {\n  cursor: pointer;\n}\n\ninput {\n  border-radius: 3px;\n  max-width: 65%;\n}\n\n</style>\n",
    "<script>\n  import { slide } from 'svelte/transition';\n  import { circIn } from 'svelte/easing';\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n\n  export let message;\n  export let show;\n\n\n  function closeError() {\n    dispatch(\"close-error\");\n  }\n\n</script>\n\n{#if show}\n<div class=\"container\"\n  in:slide=\"{{delay: 100, duration: 300, easing: circIn}}\">\n  <div class=\"error\">\n    <span class=\"error-close\"\n      on:click={closeError}>X</span>\n    <h4>{message}</h4>\n  </div>\n</div>\n{/if}\n\n<style>\n\n.container {\n  display: flex;\n  justify-content: center;\n}\n\n.error {\n  position: fixed;\n  bottom: 0;\n  background-color: #111;\n  color: hsla(258, 100%, 99%, 1);\n  padding: 1.5rem 5rem;\n  border-radius: 3px;\n}\n\n.error-close {\n  position: absolute;\n  top: 5.5px;\n  right: 5.5px;\n  cursor: pointer;\n}\n\n</style>\n",
    "<script>\n  import { scale } from 'svelte/transition';\n  import { quintOut } from 'svelte/easing';\n\n  import { createEventDispatcher } from \"svelte\";\n  let dispatch = createEventDispatcher();\n\n  export let noteBody;\n  export let id;\n\n  function deleteNote() {\n    dispatch(\"delete-note\", id);\n  }\n\n</script>\n\n  <div id=\"note\"\n    transition:scale=\"{{duration: 250, delay: 10, opacity: 0.5, start: 0.5, easing: quintOut}}\">\n    {noteBody}\n    <button on:click={deleteNote}>X</button>\n  </div>\n\n\n<style>\n\n#note {\n  background-color: hsla(258, 100%, 99%, 1);\n  position: relative;\n  display: flex;\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n  transition: 0.3s;\n  padding: 12px;\n  min-width: 25%;\n  min-height: 4rem;\n  margin: 0.75rem;\n  border-radius: 3px;\n}\n\nbutton {\n  position: absolute;\n  bottom: -2px;\n  right: 6px;\n  border: none;\n  background-color: hsla(228, 100%, 89%, 1);\n  border-radius: 3px;\n  padding: 0.15rem 0.35rem;\n  font-weight: 800;\n  }\n\nbutton:hover {\n  cursor: pointer;\n}\n\n</style>\n"
  ],
  "names": [],
  "mappings": "AAyCQ,IAAI,AAAE,CAAC,AACb,MAAM,CAAE,CAAC,CACT,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACtC,CAAC;AC4ED,KAAK,cAAC,CAAC,AACL,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACzC,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACvC,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,GAAG,CACd,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,aAAa,CAAE,OAAO,AACxB,CAAC;AC7DO,IAAI,AAAE,CAAC,AACb,MAAM,CAAE,CAAC,CACT,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACtC,CAAC,AAOD,OAAO,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,UAAU,CAC3B,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,SAAS,cAAC,CAAC,AACT,QAAQ,CAAE,KAAK,CACf,KAAK,CAAE,GAAG,CACV,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACzC,aAAa,CAAE,GAAG,CAClB,eAAe,CAAE,MAAM,CACvB,aAAa,CAAE,MAAM,AACvB,CAAC,AAED,uBAAS,CAAG,mBAAK,CAAE,MAAM,cAAC,CAAC,AACzB,MAAM,CAAE,GAAG,CACX,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,OAAO,AACtB,CAAC,AAED,oBAAM,MAAM,AAAC,CAAC,AACZ,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,cAAc,cAAC,CAAC,AACd,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,OAAO,AAChB,CAAC;AC9BD,KAAK,eAAC,CAAC,AACL,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACxC,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC9B,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,YAAY,eAAC,CAAC,AACZ,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAEzC,OAAO,CAAE,OAAO,CAAC,OAAO,CACxB,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,2BAAY,MAAM,AAAC,CAAC,AAClB,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,KAAK,eAAC,CAAC,AACL,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACzC,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,SAAS,CAAE,IAAI,CACf,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACV,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,SAAS,eAAC,CAAC,AACT,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,YAAY,AAC/B,CAAC,AAED,MAAM,eAAC,CAAC,AACN,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,OAAO,AACpB,CAAC,AAEH,qBAAM,MAAM,AAAC,CAAC,AACZ,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,KAAK,eAAC,CAAC,AACL,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,GAAG,AAChB,CAAC;AClHD,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,AACzB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,CAAC,CACT,gBAAgB,CAAE,IAAI,CACtB,KAAK,CAAE,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC9B,OAAO,CAAE,MAAM,CAAC,IAAI,CACpB,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,YAAY,cAAC,CAAC,AACZ,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,KAAK,CACV,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,OAAO,AACjB,CAAC;ACxBD,KAAK,cAAC,CAAC,AACL,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACzC,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACvC,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,OAAO,CACf,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACzC,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,OAAO,CAAC,OAAO,CACxB,WAAW,CAAE,GAAG,AAChB,CAAC,AAEH,oBAAM,MAAM,AAAC,CAAC,AACZ,MAAM,CAAE,OAAO,AACjB,CAAC"
}